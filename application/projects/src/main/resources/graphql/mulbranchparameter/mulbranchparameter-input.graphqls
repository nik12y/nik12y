input MulBranchParameterInput{

    currencyCode: String! @Size(min: 3, max: 3, message: "currencyCode.message") @Pattern(regexp: "[A-Z]+",message: "Currency Code  should be uppercase alphabet of size 3")
    currencyName:String! @Size(min: 1, max: 35, message: "currencyName.message") @Pattern(regexp: "[A-Za-z0-9 ]+",message: "currency Name should be alphanumeric of size up to 35")
    entityCode: String! @Size(min: 1, max: 10, message: "entityCode.message") @Pattern(regexp: ".[A-Za-z0-9]{1,10}",message: "Entity Code Invalid pattern")
    entityType:String! @Size(min: 1, max: 20, message: "entityType.message") @Pattern(regexp: "[A-Za-z0-9 ]+",message: "entity Type Invalid pattern")
    entityLevel: String! @Size(min: 1, max: 10, message: "entityLevel.message") @Pattern(regexp: ".[A-Za-z0-9]{1,10}",message: "Entity level Invalid pattern")
    entityName:String! @Size(min: 1, max: 40, message: "entityName.message") @Pattern(regexp: "[A-Za-z0-9()-/]+",message: "Entity Name Invalid pattern")
    spotDays: Int @Digits(integer : 3, fraction : 0, message : "spotDays.message") @PositiveOrZero(message : "Spot Days cannot be negative.")
    generationOfPaymentMessage: Int @Digits(integer : 3, fraction : 0, message : "generationOfPaymentMessage.message") @PositiveOrZero(message : "Generation Of Payment Message  cannot be negative.")
    generationOfReceiveMessages: Int @Digits(integer : 3, fraction : 0, message : "generationOfReceiveMessages.message")@PositiveOrZero(message : " Generation Of Payment Message cannot be negative.")
    recordVersion : Int!
    status : String!
    authorized: String
    action : String!
    createdBy: String
    creationTime: String
    lastUpdatedBy: String
    lastUpdatedTime: String

}