input CountryInput {
    countryCode: String! @Size(min: 2, max: 2, message: "countryCode.message") @Pattern(regexp: ".[A-Za-z0-9]{1,2}",message: "Country Code Invalid pattern")
    countryName : String @Size(min: 1, max: 100, message: "countryName.message") @Pattern(regexp: ".[A-Za-z0-9]{1,100}",message: "Country Name Invalid pattern")
    numericCountryCode : Int @Digits(integer : 3, fraction : 0, message : "numericCountryCode.message")
    alternateCountryCode : String @Size(min: 0, max: 3, message: "alternateCountryCode.message") @Pattern(regexp: ".[A-Za-z0-9]",message: "Alternate Country Code Invalid pattern")
    regionCode: String @Size(min: 2, max: 10, message: "regionCode.message") @Pattern(regexp: ".[A-Za-z0-9]{2,10}",message: "Region Code Invalid pattern")
    limitCurrency : String @Size(min: 1, max: 3, message: "limitCurrency.message") @Pattern(regexp: ".[A-Za-z0-9]{1,3}",message: "Limit Currency Invalid pattern")
    overallLimit : Float @Digits(integer : 23, fraction : 2, message : "overallLimit.message")
    ibanRequired : Boolean!
    euMember : Boolean!
    clearingCodeBicPlus : Boolean!
    generateMt205 : Boolean!
    defaultClearingNetwork : Boolean!
    action : String!
    status : String!
    recordVersion : Int
    createdBy: String
    creationTime: String
    lastUpdatedBy: String
    lastUpdatedTime: String
}

